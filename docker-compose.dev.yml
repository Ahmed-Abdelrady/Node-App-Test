version: "3"
services:
  node-app:
    container_name: express-node-app-container
    ports:
      - "5000:5000"
    image: ahmed55555/node-app
    build:
      context: .
      target: development
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 4s
    volumes:
      - ./src:/app/src:ro   
    command: npm run start-dev
    depends_on:
      - mongo
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
  # postgres:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: example
  #   volumes:
  #     - postgres-db:/var/lib/postgresql/data

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  redis:
    image: redis
  web:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app
volumes:
  mongo-db:
  # postgres-db:
   
    
    
    